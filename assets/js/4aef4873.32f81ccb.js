"use strict";(self.webpackChunkgcp_workshop=self.webpackChunkgcp_workshop||[]).push([[114],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(a),h=o,u=d["".concat(c,".").concat(h)]||d[h]||m[h]||r;return a?n.createElement(u,i(i({ref:t},p),{},{components:a})):n.createElement(u,i({ref:t},p))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=a[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},1154:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var n=a(7462),o=(a(7294),a(3905)),r=a(4996);const i={sidebar_position:2},s="Prepare Your Data",c={unversionedId:"atlas-database/prepare-your-data",id:"atlas-database/prepare-your-data",title:"Prepare Your Data",description:"In the previous section, you deployed a free database cluster named Workshop-Bakery. As you may have guessed from the cluster name, you will be building a baking recipes website. Hence, in this section you will insert some data containing delicious cake recipes into your database.",source:"@site/docs/1-atlas-database/prepare-your-data.mdx",sourceDirName:"1-atlas-database",slug:"/atlas-database/prepare-your-data",permalink:"/docs/atlas-database/prepare-your-data",draft:!1,editUrl:"https://github.com/mongodb-developer/google-cloud-workshop/blob/main/docs/1-atlas-database/prepare-your-data.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get Started with MongoDB Atlas",permalink:"/docs/atlas-database/get-started-atlas"},next:{title:"Atlas App Services",permalink:"/docs/category/atlas-app-services"}},l={},p=[],d={toc:p},m="wrapper";function h(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"prepare-your-data"},"Prepare Your Data"),(0,o.kt)("p",null,"In the previous section, you deployed a free database cluster named ",(0,o.kt)("strong",{parentName:"p"},"Workshop-Bakery"),". As you may have guessed from the cluster name, you will be building a baking recipes website. Hence, in this section you will insert some data containing delicious cake recipes into your database."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You will be using the Atlas UI again. However, you can also browse and manage MongoDB data with the MongoDB Compass GUI and the MongoDB Shell. ")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click the ",(0,o.kt)("strong",{parentName:"p"},"Browse Collections")," button to access your new ",(0,o.kt)("strong",{parentName:"p"},"Workshop-Bakery")," cluster."),(0,o.kt)("img",{alt:"Database deployment section highlighting the 'Browse Collections' button",src:(0,r.Z)("/img/chapter-1-mongodb-atlas/database-deployments-browse.png")})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the window that appears, select ",(0,o.kt)("strong",{parentName:"p"},"Add My Own Data"),". "),(0,o.kt)("img",{alt:"'Add data to your Collections' dialog highlighting the 'Add My Own Data' button",src:(0,r.Z)("/img/chapter-1-mongodb-atlas/add-my-own-data.png")})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Name the database ",(0,o.kt)("strong",{parentName:"p"},"Bakery")," and the collection ",(0,o.kt)("strong",{parentName:"p"},"cakes"),". Click ",(0,o.kt)("strong",{parentName:"p"},"Create"),"."),(0,o.kt)("img",{alt:"'Create Database' dialog with 'Bakery' filled in as a database name and 'cakes' filled in as a collection name",src:(0,r.Z)("/img/chapter-1-mongodb-atlas/create-database-and-collection.png"),width:"400"})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"You now have a ",(0,o.kt)("strong",{parentName:"p"},"cakes")," collection created inside the new ",(0,o.kt)("strong",{parentName:"p"},"bakery")," database\u2014woo! Next, you will add some data. The Atlas UI makes this really easy. Click the ",(0,o.kt)("strong",{parentName:"p"},"Insert Document")," button in the top right corner."),(0,o.kt)("img",{alt:"Cakes collection page highlighting the 'Insert Document' button",src:(0,r.Z)("/img/chapter-1-mongodb-atlas/insert-document.png")})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the Atlas UI, there are two options for adding data when inserting it. You can either add each field individually or define the data as a JSON object. In this case, you will use the JSON view and copy-paste an existing cake recipe. To switch to the JSON view, click the ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")," button."),(0,o.kt)("img",{alt:"'Insert to Collection' dialog highlighting the JSON button",src:(0,r.Z)("/img/chapter-1-mongodb-atlas/switch-to-json-view.png"),width:"500"})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Delete what is currently in the box, copy and paste the following cake document, and then click ",(0,o.kt)("strong",{parentName:"p"},"Insert"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "_id": {\n    "$oid": "64759d513beb40594cb859e9"\n  },\n  "name": "Chocolate Cake",\n  "shortDescription": "Chocolate cake is a cake flavored with melted chocolate, cocoa powder, or sometimes both.",\n  "description": "Chocolate cake is made with chocolate; it can be made with other ingredients, as well. These ingredients include fudge, vanilla creme, and other sweeteners. The history of chocolate cake goes back to 1764, when Dr. James Baker discovered how to make chocolate by grinding cocoa beans between two massive circular millstones.",\n  "image": "https://addapinch.com/wp-content/uploads/2020/04/chocolate-cake-DSC_1768.jpg",\n  "ingredients": [\n    "flour",\n    "sugar",\n    "cocoa powder"\n  ],\n  "recipe": "Preheat your oven to the specified temperature and prepare a greased cake pan. Mix the dry and wet ingredients separately, then combine and pour the batter into the pan. Bake for the recommended time, let it cool, and optionally frost or decorate as desired.",\n  "stock": 25\n}\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Repeat ",(0,o.kt)("strong",{parentName:"p"},"Steps 4 and 5"),", this time adding the following cake document:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "_id": {\n    "$oid":"64759e4c3beb40594cb859ed"\n  },\n  "name": "Cheese Cake",\n  "shortDescription": "Cheesecake is a sweet dessert consisting of one or more layers. The main, and thickest, layer consists of a mixture of a soft, fresh cheese (typically cottage cheese, cream cheese or ricotta), eggs, and sugar. ",\n  "description": "Cheesecake is a sweet dessert consisting of one or more layers. The main, and thickest, layer consists of a mixture of a soft, fresh cheese (typically cottage cheese, cream cheese or ricotta), eggs, and sugar. If there is a bottom layer, it most often consists of a crust or base made from crushed cookies (or digestive biscuits), graham crackers, pastry, or sometimes sponge cake.[1] Cheesecake may be baked or unbaked (and is usually refrigerated).",\n  "image":"https://sallysbakingaddiction.com/wp-content/uploads/2018/05/perfect-cheesecake-recipe.jpg",\n  "ingredients": [ "graham cracker crumbs", "sugar", "eggs", "butter", "sour cream", "cream cheese", "vanilla extract" ],\n  "recipe": "Mix graham cracker crumbs and melted butter for the crust. Press into a pan. Beat cream cheese, sugar, and vanilla. Fold in whipped cream. Pour over the crust. Refrigerate until set, remove from pan, and serve chilled with desired toppings.",\n  "stock": 40\n}\n')),(0,o.kt)("admonition",{parentName:"li",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"MongoDB documents use BSON (Binary JSON), a binary serialization format, to store data. BSON extends the JSON specification with a few data types such as ",(0,o.kt)("strong",{parentName:"p"},"Date")," and ",(0,o.kt)("strong",{parentName:"p"},"BinData"),"."),(0,o.kt)("p",{parentName:"admonition"},"One of the ",(0,o.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/manual/reference/bson-types/?utm_campaign=devrel&utm_source=workshop&utm_medium=cta&utm_content=google_cloud_workshop&utm_term=stanimira.vlaeva"},"BSON types")," if ",(0,o.kt)("inlineCode",{parentName:"p"},"ObjectId")," \u2014 an easy to generate 12-byte value that consists of a timestamp, a machine and a process identifiers, and a counter. In MongoDB, every document stored in a collection must have a unique ",(0,o.kt)("inlineCode",{parentName:"p"},"_id")," field, which serves as a primary key. If a document is inserted without specifying an ",(0,o.kt)("inlineCode",{parentName:"p"},"_id")," field, the MongoDB driver will automatically generate an ",(0,o.kt)("inlineCode",{parentName:"p"},"ObjectId")," for the ",(0,o.kt)("inlineCode",{parentName:"p"},"_id")," field."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Next, you will create a new collection \u2014 ",(0,o.kt)("strong",{parentName:"p"},"comments")," that stores the reviews for each recipe left from users on the website. Hover your mouse over ",(0,o.kt)("strong",{parentName:"p"},"Bakery")," in the left panel and click on the ",(0,o.kt)("strong",{parentName:"p"},"+")," sign that shows up."),(0,o.kt)("img",{alt:"Databases section with the '+' sign to add a new collection highlighted",src:(0,r.Z)("/img/chapter-1-mongodb-atlas/add-new-collection-existing-database.png"),width:"500"})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Name the collection ",(0,o.kt)("strong",{parentName:"p"},"comments")," and click ",(0,o.kt)("strong",{parentName:"p"},"Create"),"."),(0,o.kt)("img",{alt:"Create database dialog with the text 'comments' in the collection name field",src:(0,r.Z)("/img/chapter-1-mongodb-atlas/comments-collection.png"),width:"500"})),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add a new comment by copy-pasting the document below. "),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n"_id": {\n  "$oid": "6475be48a10dcef00d5c7d9c"\n},\n"cakeId": {\n  "$oid": "64759d513beb40594cb859e9"\n},\n"name": "Peter Quill",\n"text": "This recipe was super easy to follow and the result was delicious!",\n"date": {\n  "$date": {\n      "$numberLong": "1685750400000"\n    }\n  }\n}\n')),(0,o.kt)("admonition",{parentName:"li",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"cakeId")," field is of type ",(0,o.kt)("inlineCode",{parentName:"p"},"ObjectId")," just like the ",(0,o.kt)("inlineCode",{parentName:"p"},"_id")," field. ",(0,o.kt)("inlineCode",{parentName:"p"},"_id")," is the unique identifier of this ",(0,o.kt)("strong",{parentName:"p"},"comment")," document."),(0,o.kt)("p",{parentName:"admonition"},"On the other hand, ",(0,o.kt)("inlineCode",{parentName:"p"},"cakeId")," is equal to the ",(0,o.kt)("inlineCode",{parentName:"p"},"_id")," of a document from the ",(0,o.kt)("strong",{parentName:"p"},"cakes"),". In MongoDB, this is called a ",(0,o.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/manual/reference/database-references/#std-label-document-references?utm_campaign=devrel&utm_source=workshop&utm_medium=cta&utm_content=google_cloud_workshop&utm_term=stanimira.vlaeva"},"manual reference"),". Later, you will use this field to join data from the two collections."),(0,o.kt)("p",{parentName:"admonition"},"You might also notice that ",(0,o.kt)("strong",{parentName:"p"},"date")," looks different than the rest of the fields. This field uses the ",(0,o.kt)("strong",{parentName:"p"},"BSON Date")," type which is a 64-bit integer that represents the number of milliseconds since the Unix epoch (Jan 1, 1970). ")))),(0,o.kt)("p",null,"Congrats! You now have your Atlas database set up with some cake recipes, and even a comment associated with a cake!"))}h.isMDXComponent=!0}}]);