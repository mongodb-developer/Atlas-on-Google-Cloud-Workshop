"use strict";(self.webpackChunkgcp_workshop=self.webpackChunkgcp_workshop||[]).push([[165],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(n),g=r,k=m["".concat(p,".").concat(g)]||m[g]||c[g]||o;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=g;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8869:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3},l="Use the API in Atlas App Services to Analyze Sentiment",i={unversionedId:"natural-language-api/configure-app-services",id:"natural-language-api/configure-app-services",title:"Use the API in Atlas App Services to Analyze Sentiment",description:"Now you want to start linking the Natural Language API with Atlas App Services so you can use it from within our app.",source:"@site/docs/3-natural-language-api/configure-app-services.mdx",sourceDirName:"3-natural-language-api",slug:"/natural-language-api/configure-app-services",permalink:"/docs/natural-language-api/configure-app-services",draft:!1,editUrl:"https://github.com/mongodb-developer/google-cloud-workshop/blob/main/docs/3-natural-language-api/configure-app-services.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Enable the Google Cloud Natural Language API",permalink:"/docs/natural-language-api/set-up-nl-api"},next:{title:"Google Cloud Run",permalink:"/docs/category/google-cloud-run"}},p={},s=[{value:"Create a Value for the NL API URL and Key",id:"create-a-value-for-the-nl-api-url-and-key",level:2},{value:"Create Atlas Functions to Analyze Sentiment",id:"create-atlas-functions-to-analyze-sentiment",level:2},{value:"Set up a Trigger to Run the Function on a New Comment",id:"set-up-a-trigger-to-run-the-function-on-a-new-comment",level:2},{value:"Testing it all together",id:"testing-it-all-together",level:2}],u={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"use-the-api-in-atlas-app-services-to-analyze-sentiment"},"Use the API in Atlas App Services to Analyze Sentiment"),(0,r.kt)("p",null,"Now you want to start linking the Natural Language API with Atlas App Services so you can use it from within our app.\nBefore starting this section, make sure you have the Atlas App Services ",(0,r.kt)("strong",{parentName:"p"},"Bakery")," application open in your browser."),(0,r.kt)("h2",{id:"create-a-value-for-the-nl-api-url-and-key"},"Create a Value for the NL API URL and Key"),(0,r.kt)("p",null,"You want to store some values from Google Cloud, including your new API key, inside App Services values, so they can be accessed from within multiple services, including Functions and Triggers."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("strong",{parentName:"p"},"Values")," from the left menu under the ",(0,r.kt)("strong",{parentName:"p"},"Build")," heading.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Create New Value"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following details in the form that appears:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Give Your Value a Name: ",(0,r.kt)("strong",{parentName:"li"},"gcpAPIKey"),". "),(0,r.kt)("li",{parentName:"ul"},"Choose a Type: ",(0,r.kt)("strong",{parentName:"li"},"Secret"),"."),(0,r.kt)("li",{parentName:"ul"},"Add Content: Insert your API key you copied from Google Cloud in the last section."),(0,r.kt)("li",{parentName:"ul"},"Click ",(0,r.kt)("strong",{parentName:"li"},"Save Value"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"By its very nature, a secret is a secret. So in order to access it, you need to define an additional value that points to our secret that you can then call from our function later. Click ",(0,r.kt)("strong",{parentName:"p"},"Create a New Value")," and add the following:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Give Your Value a Name: ",(0,r.kt)("strong",{parentName:"li"},"gcpAPIKey"),". "),(0,r.kt)("li",{parentName:"ul"},"Choose a Type: ",(0,r.kt)("strong",{parentName:"li"},"Value"),"."),(0,r.kt)("li",{parentName:"ul"},"Add Content: ",(0,r.kt)("strong",{parentName:"li"},"Link to Secret"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"gcpAPIKey"),"."),(0,r.kt)("li",{parentName:"ul"},"Click ",(0,r.kt)("strong",{parentName:"li"},"Save Value"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You now need to create a second Value, so click ",(0,r.kt)("strong",{parentName:"p"},"Create New Value")," in the top right and add the following:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Give Your Value a Name: ",(0,r.kt)("strong",{parentName:"li"},"gcpSentimentAnalyzeURL"),"."),(0,r.kt)("li",{parentName:"ul"},"Choose a Type: ",(0,r.kt)("strong",{parentName:"li"},"Value"),"."),(0,r.kt)("li",{parentName:"ul"},'Add Content as Custom Content with the value (including the double quotes): "',(0,r.kt)("a",{parentName:"li",href:"https://language.googleapis.com/v1/documents:analyzeSentiment%22"},'https://language.googleapis.com/v1/documents:analyzeSentiment"')),(0,r.kt)("li",{parentName:"ul"},"Click ",(0,r.kt)("strong",{parentName:"li"},"Save Draft"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Review & Deploy Draft")," to apply the changes."))),(0,r.kt)("h2",{id:"create-atlas-functions-to-analyze-sentiment"},"Create Atlas Functions to Analyze Sentiment"),(0,r.kt)("p",null,"Now that you have the values saved and available to reference, it\u2019s time to write the functions that will fetch the new document and also call the Natural Language API."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("strong",{parentName:"p"},"Functions")," from the left and click ",(0,r.kt)("strong",{parentName:"p"},"Create New Function"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following details:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("strong",{parentName:"li"},"analyzeCommentSentiment"),"."),(0,r.kt)("li",{parentName:"ul"},"Authentication: ",(0,r.kt)("strong",{parentName:"li"},"System"),"."),(0,r.kt)("li",{parentName:"ul"},"Leave the rest as default and click ",(0,r.kt)("strong",{parentName:"li"},"Save Draft"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"This will open the Function Editor, so replace the default code with the following:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'exports = async function(comment) {\n    const URL = context.values.get("gcpSentimentAnalyzeURL");\n    const gcpAPIKey = context.values.get("gcpAPIKey");\n\n    const response = await context.http.post({\n        url: `${URL}?key=${gcpAPIKey}`,\n        body: {\n            "document": {\n            "type": "PLAIN_TEXT",\n            "language": "en-US",\n            "content": comment\n        }\n    },\n        encodeBodyAsJSON: true\n    });\n\n    // The response body is a BSON.Binary object. Parse it and return.\n    return JSON.parse(response.body.text());\n};\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Save Draft")," and then ",(0,r.kt)("strong",{parentName:"p"},"Review Draft & Deploy")," again to share our changes."),(0,r.kt)("p",{parentName:"li"},"This function is fairly simple. It takes in a comment object, then assigns the values you saved earlier in Values as local variables. It then sends our comment to the API via a POST request, parses the response to text, and returns it.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Create New Function")," from inside Functions again.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enter the following details:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("strong",{parentName:"li"},"getCommentAndAnalyzeSentiment"),"."),(0,r.kt)("li",{parentName:"ul"},"Authentication: ",(0,r.kt)("strong",{parentName:"li"},"System"),"."),(0,r.kt)("li",{parentName:"ul"},"Leave the rest as default and click ",(0,r.kt)("strong",{parentName:"li"},"Save Draft"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the Function Editor, replace the existing code with the following:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'exports = async function (changeEvent) {\n    const commentDocument = changeEvent.fullDocument;\n    const sentiment = await context.functions.execute("analyzeCommentSentiment", commentDocument.text);\n    \n    const commentsCollection = context.services.get("mongodb-atlas").db("Bakery").collection("comments");\n    await commentsCollection.updateOne(\n        {\n            _id: commentDocument._id\n        }, {\n            $set: { sentiment }\n        }\n    );\n};\n')))),(0,r.kt)("p",null,"Hit ",(0,r.kt)("strong",{parentName:"p"},"Save Draft")," to persist your changes."),(0,r.kt)("p",null,"This function gets the document from the ",(0,r.kt)("strong",{parentName:"p"},"changeEvent")," and then calls the ",(0,r.kt)("strong",{parentName:"p"},"analyzeCommentSentiment")," function, passing the comment text as an argument. You then call another MongoDB Query API function, ",(0,r.kt)("strong",{parentName:"p"},"updateOne"),", which will update our existing document with a new sentiment field with the details you get back from the Natural Language API."),(0,r.kt)("h2",{id:"set-up-a-trigger-to-run-the-function-on-a-new-comment"},"Set up a Trigger to Run the Function on a New Comment"),(0,r.kt)("p",null,"In the last section, you set up two functions to help us call out to the Natural Language API, but now you want to create a trigger that can be called when a new comment is created, calling out to that function to request the analysis."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select ",(0,r.kt)("strong",{parentName:"p"},"Triggers")," from the left side.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Add a Trigger")," and add the following before hitting ",(0,r.kt)("strong",{parentName:"p"},"Save"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Trigger Type: ",(0,r.kt)("strong",{parentName:"li"},"Database")),(0,r.kt)("li",{parentName:"ul"},"Name: ",(0,r.kt)("strong",{parentName:"li"},"getCommentAndAnalyzeSentiment")),(0,r.kt)("li",{parentName:"ul"},"Cluster Name: ",(0,r.kt)("strong",{parentName:"li"},"Workshop-Bakery")),(0,r.kt)("li",{parentName:"ul"},"Database Name: ",(0,r.kt)("strong",{parentName:"li"},"Bakery")),(0,r.kt)("li",{parentName:"ul"},"Collection Name: ",(0,r.kt)("strong",{parentName:"li"},"comments")),(0,r.kt)("li",{parentName:"ul"},"Operation Type: ",(0,r.kt)("strong",{parentName:"li"},"Insert")),(0,r.kt)("li",{parentName:"ul"},"Full Document: ",(0,r.kt)("strong",{parentName:"li"},"Enabled")),(0,r.kt)("li",{parentName:"ul"},"Select An Event Type: ",(0,r.kt)("strong",{parentName:"li"},"Function")),(0,r.kt)("li",{parentName:"ul"},"Function: ",(0,r.kt)("strong",{parentName:"li"},"getCommentAndAnalyzeSentiment")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click ",(0,r.kt)("strong",{parentName:"p"},"Review Draft & Deploy")," to deploy the changes."))),(0,r.kt)("h2",{id:"testing-it-all-together"},"Testing it all together"),(0,r.kt)("p",null,"Woo! You now have all the pieces in place, so it\u2019s time to start seeing your hard work in action."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Go back to your StackBlitz tab which is still running the bakery application.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click into one of your existing cakes and add a comment. You will see it added to the page under the ",(0,r.kt)("strong",{parentName:"p"},"comments")," section.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Head back to Atlas and click ",(0,r.kt)("strong",{parentName:"p"},"Browse Collections")," like you learned about in the first chapter when you inserted your first documents.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Click into the ",(0,r.kt)("strong",{parentName:"p"},"comments")," collection inside the ",(0,r.kt)("strong",{parentName:"p"},"Bakery")," database and have a look at the document for the comment you just wrote."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"You will see a new field called ",(0,r.kt)("strong",{parentName:"li"},"sentiment")," with the Object type."),(0,r.kt)("li",{parentName:"ul"},"Expand this object and then expand the ",(0,r.kt)("strong",{parentName:"li"},"documentSentiment")," field (also an object), and you will see the sentiment score for your comment. Hooray!")))))}c.isMDXComponent=!0}}]);